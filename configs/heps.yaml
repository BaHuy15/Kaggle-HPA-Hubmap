global:
  name: &name fups_pv2d
  fold: &fold 4
  version: &version f4

norm_cfg: &norm_cfg {type: BN, requires_grad: True}
model:
  type: MMSegModel
  backbone:
    type: mmseg.PyramidVisionTransformerV2
    model_name: b2
    pretrained: ./weights/pvt_v2_b2.pth
  decode_head:
    type: DAFormerHead
    channels: 256
    dropout_ratio: 0.1
    num_classes: 1
    norm_cfg: *norm_cfg
    align_corners: False
    decoder_params:
      embed_dims: 256
      embed_cfg: {type: mlp, act_cfg: null, norm_cfg: null}
      embed_neck_cfg: {type: mlp, act_cfg: null, norm_cfg: null}
      fusion_cfg: 
        type: conv
        kernel_size: 3
        act_cfg: {type: ReLU}
        norm_cfg: *norm_cfg
  # aux_head:
  #   type: FCNHead
  #   in_index: 2
  #   channels: 256
  #   num_convs: 1
  #   concat_inputs: False
  #   dropout_ratio: 0.1
  #   num_classes: 1
  #   norm_cfg: *norm_cfg
  #   align_corners: False

loss: {
  losses: [{
      type: BCEWithIgnoreLoss, 
      loss_name: bce_loss, 
      ignore_index: 255, 
      loss_weight: 1.0,
    }, {
      type: DiceLoss, 
      loss_name: dice_loss, 
      loss_weight: 1.0, 
    }],
  # multi_inputs: True,
  # input_weights: [1, 1]
}

metric: 
  type: DiceMetric
  per_image: True

data:
  type: RawData
  fold: *fold
  num_folds: 5
  batch_size: 16
  stratified_by: null
  group_by: null
  dataset:
    image_size: &image_size 768
    resize: &resize 768
    data_dir: [./data/train, ./data/he_unlabeled]
    drop_organs: [lung]
    # balance_key: organ
    resample_query: {
      train: [
        {query: data_dir == "./data/he_unlabeled" & organ == "kidney", ratio: 0.1},
        {query: data_dir == "./data/he_unlabeled" & organ == "prostate", ratio: 0.1},
        {query: data_dir == "./data/he_unlabeled" & organ == "spleen", ratio: 0.1},
      ]
    }
    trans: {
      train: [
        {type: Resize, height: *resize, width: *resize},
        {type: HorizontalFlip, p: 0.5},
        {type: VerticalFlip, p: 0.5},
        {type: RandomRotate90, p: 0.5},
        {type: ShiftScaleRotate, rotate_limit: 45, border_mode: 0, value: 0, mask_value: 0, p: 0.5},
        {type: OneOf, transforms: [
          {type: ElasticTransform, p: 0.5},
          {type: GridDistortion, p: 0.5},
          {type: OpticalDistortion, p: 0.5},
        ], p: 1.0},
        {type: SomeOf, transforms: [
          {type: ColorJitter, p: 0.5, contrast: 0.0, saturation: 0.4, hue: 0.4, brightness: 0.0},
          {type: ColorJitter, p: 0.5, contrast: 0.4, saturation: 0.0, hue: 0.0, brightness: 0.0},
          {type: GaussNoise, p: 0.5},
        ], p: 1.0, n: 2, replace: False},
        {type: Normalize},
        {type: ToTensorV2},
      ],
      val: [
        {type: Resize, height: *resize, width: *resize},
        {type: Normalize},
        {type: ToTensorV2},
      ]
    }

train:
  # optimizer
  optimizer: adam
  learning_rate: 1e-3
  weight_decay: 2e-5

  # scheduler
  num_epochs: 100
  scheduler: one_cycle

  # trainer
  monitor: val_dice
  log_step: 50
  val_interval: 5
  swa: True
  grad_clip: 2.0
  strategy: dp

name: *name
version: *version

